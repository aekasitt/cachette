[build-system]
build-backend = 'poetry.core.masonry.api'
requires = ['poetry-core>=1.0.0']


[tool.mypy]
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true


[tool.poetry]
authors = ['Sitt Guruvanich <aekazitt+github@gmail.com>']
classifiers = [
  'Environment :: Web Environment',
  'Intended Audience :: Developers',
  'License :: OSI Approved :: MIT License',
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
  'Programming Language :: Python :: 3.13',
  'Programming Language :: Python :: 3 :: Only',
  'Operating System :: OS Independent',
  'Topic :: Internet :: WWW/HTTP :: Dynamic Content',
  'Topic :: Software Development :: Libraries :: Python Modules'
]
description = 'Cache extension for ASGI frameworks'
homepage = 'https://github.com/aekasitt/cachette'
keywords = [
  'starlette', 'fastapi', 'cache', 'redis', 'aioredis', 'aiobotocore',
  'asynchronous', 'memcached', 'aiomcache', 'mongodb', 'motor'
]
license = 'MIT'
name = 'cachette'
packages = [
  {from='src', include='cachette'},
]
readme = 'README.md'
repository = 'https://github.com/aekasitt/cachette'
version = '0.1.9'


[tool.poetry.dependencies]
pydantic = '^2.6.0'
python = '^3.9'


[tool.poetry.group.dataframe]
optional = true


[tool.poetry.group.dataframe.dependencies]
pandas = '>=1.4.0'
pyarrow = '^10.0.1'


[tool.poetry.group.dev]
optional = true


[tool.poetry.group.dev.dependencies]
mypy = '^1.8.0'
ruff = '^0.3.5'


[tool.poetry.group.examples]
optional = true


[tool.poetry.group.examples.dependencies]
aiomcache = '^0.7.0'
blacksheep = '^2.0.6'
redis = '^4.2.1'
types-redis = '^4.1.21'
uvicorn = '0.15.0'
litestar = '^2.3.2'


[tool.poetry.group.memcached]
optional = true


[tool.poetry.group.memcached.dependencies]
aiomcache = '^0.7.0'


[tool.poetry.group.mongodb]
optional = true


[tool.poetry.group.mongodb.dependencies]
motor = '^2.5.1'


[tool.poetry.group.msgpack]
optional = true


[tool.poetry.group.msgpack.dependencies]
msgpack = '^1.0.3'


[tool.poetry.group.orjson]
optional = true


[tool.poetry.group.orjson.dependencies]
orjson = '^3.6.7'


[tool.poetry.group.redis]
optional = true


[tool.poetry.group.redis.dependencies]
redis = '^4.2.1'
types-redis = '^4.1.21'


[tool.poetry.group.test]
optional = true


[tool.poetry.group.test.dependencies]
fastapi = [
  {version='0.103.2', python='3.9'},
  {version='^0.104.0', python='^3.10'},
]
httpx = '^0.24.1'
pytest = '^7.1.1'
starlette = '^0'


[tool.poetry.group.thewholeshebang]
optional = true


[tool.poetry.group.thewholeshebang.dependencies]
aiomcache = '^0.7.0'
blacksheep = '^2.0.6'
fastapi = [
  {version='0.103.2', python='3.9'},
  {version='^0', python='^3.10'},
]
httpx = '^0.24.1'
litestar = '^2.3.2'
motor = '^2.5.1'
mypy = '^1.8.0'
orjson = '^3.6.7'
pandas = '>=1.4.0'
pyarrow = '^10.0.1'
pytest = '^7.1.1'
redis = '^4.2.1'
types-redis = '^4.1.21'
uvicorn = '0.15.0'


[tool.pytest.ini_options]
addopts = '--strict-markers --tb=short -s -rxXs'
filterwarnings = ['ignore::DeprecationWarning', 'ignore::FutureWarning']
python_files = '*.py'
testpaths = [ 'tests' ]


[tool.ruff]
indent-width = 2
line-length = 100
target-version = 'py310'


[tool.ruff.lint.per-file-ignores]
'__init__.py' = ['F401'] # Ignore unused imports
